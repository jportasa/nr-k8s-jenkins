pipeline {
    agent none
    stages {
        stage('Update YUM repo path metadata') {
            parallel {
                stage('Release') {
                    agent {
                        kubernetes {
                            label 'jenkins-linux-yum-repo-update-slave'
                            yamlFile 'JenkinsKubernetesPodYumRepoUpdateMetadata.yaml'
                            nodeSelector 'kubernetes.io/os=linux'
                        }
                    }
                    environment {
                        GITHUB_TOKEN = credentials('jenkins_github_token')
                        PROJECT = 'create binaries'
                    }
                    steps {
                        // The needed steps to create the binaries
                        container('repo-yum-updater') {
                            sh """
                                /updaterepo.sh $REPO_YUM_UPDATE_METADATA_PATH
                            """
                        }
                    }
                }
            }
        }
    }
}